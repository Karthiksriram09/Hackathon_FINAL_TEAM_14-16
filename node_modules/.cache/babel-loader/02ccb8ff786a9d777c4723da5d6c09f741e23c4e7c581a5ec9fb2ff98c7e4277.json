{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD_PROJECT_FINAL\\\\shms\\\\frontend\\\\src\\\\components\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./AdminDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [students, setStudents] = useState([{\n    id: 1,\n    name: \"John Doe\",\n    email: \"john@student.com\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    email: \"jane@student.com\"\n  }]);\n  const [counselors, setCounselors] = useState([{\n    id: 1,\n    name: \"Dr. Jane Smith\",\n    specialization: \"Anxiety\"\n  }, {\n    id: 2,\n    name: \"Dr. Robert Johnson\",\n    specialization: \"Depression\"\n  }]);\n  const handleAddStudent = () => {\n    const newStudent = {\n      id: Math.floor(Math.random() * 10000),\n      // Generate a random unique ID\n      name: \"New Student\",\n      // Default name or collected from a form\n      email: \"newstudent@example.com\",\n      // Default email or collected from a form\n      password: \"password123\" // Default password or collected from a form\n    };\n\n    // Assuming `setStudents` is the state setter function for students array\n    setStudents(prevStudents => [...prevStudents, newStudent]);\n  };\n  const handleDeleteStudent = id => {\n    setStudents(students.filter(student => student.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"students-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteStudent(student.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddStudent,\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counselors-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counselors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"YGDlF17nfDuqjd/WQLe7MZ4kVcM=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminDashboard","_s","students","setStudents","id","name","email","counselors","setCounselors","specialization","handleAddStudent","newStudent","Math","floor","random","password","prevStudents","handleDeleteStudent","filter","student","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["D:/JFSD_PROJECT_FINAL/shms/frontend/src/components/AdminDashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./AdminDashboard.css\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [students, setStudents] = useState([\r\n    { id: 1, name: \"John Doe\", email: \"john@student.com\" },\r\n    { id: 2, name: \"Jane Smith\", email: \"jane@student.com\" },\r\n  ]);\r\n\r\n  const [counselors, setCounselors] = useState([\r\n    { id: 1, name: \"Dr. Jane Smith\", specialization: \"Anxiety\" },\r\n    { id: 2, name: \"Dr. Robert Johnson\", specialization: \"Depression\" },\r\n  ]);\r\n\r\n  const handleAddStudent = () => {\r\n    const newStudent = {\r\n      id: Math.floor(Math.random() * 10000), // Generate a random unique ID\r\n      name: \"New Student\", // Default name or collected from a form\r\n      email: \"newstudent@example.com\", // Default email or collected from a form\r\n      password: \"password123\", // Default password or collected from a form\r\n    };\r\n  \r\n    // Assuming `setStudents` is the state setter function for students array\r\n    setStudents((prevStudents) => [...prevStudents, newStudent]);\r\n  };\r\n  \r\n\r\n  const handleDeleteStudent = (id) => {\r\n    setStudents(students.filter((student) => student.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h1>Admin Dashboard</h1>\r\n      <div className=\"students-section\">\r\n        <h2>Students</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students.map((student) => (\r\n              <tr key={student.id}>\r\n                <td>{student.id}</td>\r\n                <td>{student.name}</td>\r\n                <td>{student.email}</td>\r\n                <td>\r\n                  <button onClick={() => handleDeleteStudent(student.id)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button onClick={handleAddStudent}>Add Student</button>\r\n      </div>\r\n      <div className=\"counselors-section\">\r\n        <h2>Counselors</h2>\r\n        {/* Add similar logic for counselors */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}