{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD_PROJECT_FINAL\\\\shms\\\\frontend\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: \"Hi! I'm here to help you. How are you feeling today?\"\n  }]);\n  const [userInput, setUserInput] = useState(\"\");\n  const handleSend = () => {\n    if (userInput.trim() === \"\") return;\n    const updatedMessages = [...messages, {\n      type: \"user\",\n      text: userInput\n    }];\n\n    // Generate bot response based on the user's message\n    const botResponses = [{\n      condition: text => /stressed|anxious|tired/i.test(text),\n      response: \"Do you often feel overwhelmed or have difficulty concentrating?\"\n    }, {\n      condition: text => /yes|sometimes/i.test(text),\n      response: \"Do you find it hard to relax or enjoy activities?\"\n    }, {\n      condition: text => /no|rarely/i.test(text),\n      response: \"That's great to hear! It seems like you have a healthy mental state.\"\n    }, {\n      condition: text => /thank you|thanks/i.test(text),\n      response: \"You're welcome! Remember, I'm here whenever you need support.\"\n    }, {\n      condition: () => true,\n      response: \"Thank you for sharing. Based on your responses, your mental health seems fine, but remember, it's always good to talk to someone if needed.\"\n    }];\n    const botResponse = botResponses.find(({\n      condition\n    }) => condition(userInput));\n    updatedMessages.push({\n      type: \"bot\",\n      text: botResponse.response\n    });\n    setMessages(updatedMessages);\n    setUserInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"brand-name\",\n        children: \"SMHS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/home\"),\n            className: \"nav-link\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/one-on-one-sessions\"),\n            className: \"nav-link\",\n            children: \"One-on-One Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/virtual-sessions\"),\n            className: \"nav-link\",\n            children: \"Virtual Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/chatbot\"),\n            className: \"nav-link\",\n            children: \"Chatbot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/login\"),\n            className: \"logout-button\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"uc3UXAZQE98xoMYKbV07TaS2wMw=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Chatbot","_s","navigate","messages","setMessages","type","text","userInput","setUserInput","handleSend","trim","updatedMessages","botResponses","condition","test","response","botResponse","find","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/JFSD_PROJECT_FINAL/shms/frontend/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst Chatbot = () => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([\r\n    { type: \"bot\", text: \"Hi! I'm here to help you. How are you feeling today?\" },\r\n  ]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const handleSend = () => {\r\n    if (userInput.trim() === \"\") return;\r\n\r\n    const updatedMessages = [...messages, { type: \"user\", text: userInput }];\r\n\r\n    // Generate bot response based on the user's message\r\n    const botResponses = [\r\n      {\r\n        condition: (text) => /stressed|anxious|tired/i.test(text),\r\n        response: \"Do you often feel overwhelmed or have difficulty concentrating?\",\r\n      },\r\n      {\r\n        condition: (text) => /yes|sometimes/i.test(text),\r\n        response: \"Do you find it hard to relax or enjoy activities?\",\r\n      },\r\n      {\r\n        condition: (text) => /no|rarely/i.test(text),\r\n        response: \"That's great to hear! It seems like you have a healthy mental state.\",\r\n      },\r\n      {\r\n        condition: (text) => /thank you|thanks/i.test(text),\r\n        response: \"You're welcome! Remember, I'm here whenever you need support.\",\r\n      },\r\n      {\r\n        condition: () => true,\r\n        response: \"Thank you for sharing. Based on your responses, your mental health seems fine, but remember, it's always good to talk to someone if needed.\",\r\n      },\r\n    ];\r\n\r\n    const botResponse = botResponses.find(({ condition }) => condition(userInput));\r\n    updatedMessages.push({ type: \"bot\", text: botResponse.response });\r\n\r\n    setMessages(updatedMessages);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {/* Navbar */}\r\n      <nav className=\"navbar\">\r\n        <h2 className=\"brand-name\">SMHS</h2>\r\n        <ul className=\"nav-links\">\r\n          <li>\r\n            <button onClick={() => navigate(\"/home\")} className=\"nav-link\">Home</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/one-on-one-sessions\")} className=\"nav-link\">One-on-One Sessions</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/virtual-sessions\")} className=\"nav-link\">Virtual Sessions</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/chatbot\")} className=\"nav-link\">Chatbot</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/login\")} className=\"logout-button\">Logout</button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* Chatbox */}\r\n      <div className=\"chatbox\">\r\n        <div className=\"messages\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`message ${msg.type}`}>\r\n              <p>{msg.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-section\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            className=\"chat-input\"\r\n          />\r\n          <button onClick={handleSend} className=\"send-button\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}