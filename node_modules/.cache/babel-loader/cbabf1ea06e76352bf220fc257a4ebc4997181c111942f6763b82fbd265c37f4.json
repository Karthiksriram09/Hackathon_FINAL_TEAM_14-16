{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./Chatbot.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=()=>{const navigate=useNavigate();const[messages,setMessages]=useState([{type:\"bot\",text:\"Hi! I'm here to help you. How are you feeling today?\"}]);const[userInput,setUserInput]=useState(\"\");const questions=[{id:1,question:\"Do you often feel stressed or anxious?\"},{id:2,question:\"Do you find it hard to relax or enjoy activities?\"},{id:3,question:\"Do you have trouble sleeping or feel tired frequently?\"},{id:4,question:\"Do you feel sad or down most of the time?\"}];const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const handleSend=()=>{if(userInput.trim()===\"\")return;const updatedMessages=[...messages,{type:\"user\",text:userInput}];if(currentQuestionIndex<questions.length){updatedMessages.push({type:\"bot\",text:questions[currentQuestionIndex].question});setCurrentQuestionIndex(prevIndex=>prevIndex+1);}else{// Final message based on responses\nconst summaryMessage=\"Thank you for answering. Based on your responses, here are some tips and resources for you.\";updatedMessages.push({type:\"bot\",text:summaryMessage});}setMessages(updatedMessages);setUserInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"brand-name\",children:\"SMHS\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/home\"),className:\"nav-link\",children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/one-on-one-sessions\"),className:\"nav-link\",children:\"One-on-One Sessions\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/virtual-sessions\"),className:\"nav-link\",children:\"Virtual Sessions\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/chatbot\"),className:\"nav-link\",children:\"Chatbot\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/login\"),className:\"logout-button\",children:\"Logout\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbox\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(msg.type),children:/*#__PURE__*/_jsx(\"p\",{children:msg.text})},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message...\",value:userInput,onChange:e=>setUserInput(e.target.value),className:\"chat-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,className:\"send-button\",children:\"Send\"})]})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Chatbot","navigate","messages","setMessages","type","text","userInput","setUserInput","questions","id","question","currentQuestionIndex","setCurrentQuestionIndex","handleSend","trim","updatedMessages","length","push","prevIndex","summaryMessage","className","children","onClick","map","msg","index","concat","placeholder","value","onChange","e","target"],"sources":["D:/JFSD_PROJECT_FINAL/shms/frontend/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst Chatbot = () => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([\r\n    { type: \"bot\", text: \"Hi! I'm here to help you. How are you feeling today?\" },\r\n  ]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const questions = [\r\n    { id: 1, question: \"Do you often feel stressed or anxious?\" },\r\n    { id: 2, question: \"Do you find it hard to relax or enjoy activities?\" },\r\n    { id: 3, question: \"Do you have trouble sleeping or feel tired frequently?\" },\r\n    { id: 4, question: \"Do you feel sad or down most of the time?\" },\r\n  ];\r\n\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n  const handleSend = () => {\r\n    if (userInput.trim() === \"\") return;\r\n\r\n    const updatedMessages = [...messages, { type: \"user\", text: userInput }];\r\n\r\n    if (currentQuestionIndex < questions.length) {\r\n      updatedMessages.push({\r\n        type: \"bot\",\r\n        text: questions[currentQuestionIndex].question,\r\n      });\r\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n    } else {\r\n      // Final message based on responses\r\n      const summaryMessage = \"Thank you for answering. Based on your responses, here are some tips and resources for you.\";\r\n      updatedMessages.push({ type: \"bot\", text: summaryMessage });\r\n    }\r\n\r\n    setMessages(updatedMessages);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {/* Navbar */}\r\n      <nav className=\"navbar\">\r\n        <h2 className=\"brand-name\">SMHS</h2>\r\n        <ul className=\"nav-links\">\r\n          <li>\r\n            <button onClick={() => navigate(\"/home\")} className=\"nav-link\">Home</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/one-on-one-sessions\")} className=\"nav-link\">One-on-One Sessions</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/virtual-sessions\")} className=\"nav-link\">Virtual Sessions</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/chatbot\")} className=\"nav-link\">Chatbot</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => navigate(\"/login\")} className=\"logout-button\">Logout</button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* Chatbox */}\r\n      <div className=\"chatbox\">\r\n        <div className=\"messages\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`message ${msg.type}`}>\r\n              <p>{msg.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-section\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            className=\"chat-input\"\r\n          />\r\n          <button onClick={handleSend} className=\"send-button\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}