{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD_PROJECT_FINAL\\\\shms\\\\frontend\\\\src\\\\components\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./AdminDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [students, setStudents] = useState([{\n    id: 1,\n    name: \"John Doe\",\n    email: \"john@student.com\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    email: \"jane@student.com\"\n  }]);\n  const [newStudent, setNewStudent] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const handleAddStudent = () => {\n    if (!newStudent.name || !newStudent.email || !newStudent.password) {\n      alert(\"Please fill all the fields.\");\n      return;\n    }\n    const studentToAdd = {\n      id: Math.floor(Math.random() * 10000),\n      // Generate a random unique ID\n      ...newStudent\n    };\n    setStudents(prevStudents => [...prevStudents, studentToAdd]);\n    setNewStudent({\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    }); // Clear the form\n  };\n  const handleDeleteStudent = id => {\n    setStudents(students.filter(student => student.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"students-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteStudent(student.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-student-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: newStudent.name,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: newStudent.email,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: newStudent.password,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddStudent,\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counselors-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counselors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"1zXp4fz9KY7/98Kj8+ZDIBqAuVg=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminDashboard","_s","students","setStudents","id","name","email","newStudent","setNewStudent","password","handleAddStudent","alert","studentToAdd","Math","floor","random","prevStudents","handleDeleteStudent","filter","student","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/JFSD_PROJECT_FINAL/shms/frontend/src/components/AdminDashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./AdminDashboard.css\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [students, setStudents] = useState([\r\n    { id: 1, name: \"John Doe\", email: \"john@student.com\" },\r\n    { id: 2, name: \"Jane Smith\", email: \"jane@student.com\" },\r\n  ]);\r\n\r\n  const [newStudent, setNewStudent] = useState({ name: \"\", email: \"\", password: \"\" });\r\n\r\n  const handleAddStudent = () => {\r\n    if (!newStudent.name || !newStudent.email || !newStudent.password) {\r\n      alert(\"Please fill all the fields.\");\r\n      return;\r\n    }\r\n\r\n    const studentToAdd = {\r\n      id: Math.floor(Math.random() * 10000), // Generate a random unique ID\r\n      ...newStudent,\r\n    };\r\n\r\n    setStudents((prevStudents) => [...prevStudents, studentToAdd]);\r\n    setNewStudent({ name: \"\", email: \"\", password: \"\" }); // Clear the form\r\n  };\r\n\r\n  const handleDeleteStudent = (id) => {\r\n    setStudents(students.filter((student) => student.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h1>Admin Dashboard</h1>\r\n      <div className=\"students-section\">\r\n        <h2>Students</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students.map((student) => (\r\n              <tr key={student.id}>\r\n                <td>{student.id}</td>\r\n                <td>{student.name}</td>\r\n                <td>{student.email}</td>\r\n                <td>\r\n                  <button onClick={() => handleDeleteStudent(student.id)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"add-student-form\">\r\n          <h3>Add New Student</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={newStudent.name}\r\n            onChange={(e) => setNewStudent({ ...newStudent, name: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={newStudent.email}\r\n            onChange={(e) => setNewStudent({ ...newStudent, email: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={newStudent.password}\r\n            onChange={(e) => setNewStudent({ ...newStudent, password: e.target.value })}\r\n          />\r\n          <button onClick={handleAddStudent}>Add Student</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"counselors-section\">\r\n        <h2>Counselors</h2>\r\n        {/* Add similar logic for counselors */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}