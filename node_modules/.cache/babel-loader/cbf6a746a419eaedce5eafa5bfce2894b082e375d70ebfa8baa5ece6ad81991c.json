{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD_PROJECT_FINAL\\\\shms\\\\frontend\\\\src\\\\components\\\\AboutUs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: \"Hi! I'm here to help you. How are you feeling today?\"\n  }]);\n  const [userInput, setUserInput] = useState(\"\");\n  const predefinedQuestions = [{\n    question: \"Are you experiencing anxiety?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    question: \"Do you often feel stressed?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    question: \"How would you rate your mood today? (1-5)\",\n    options: []\n  }];\n  const handleSendMessage = () => {\n    if (userInput.trim() === \"\") return;\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      text: userInput\n    }]);\n    setTimeout(() => {\n      const currentQuestion = predefinedQuestions[messages.length - 1];\n      if (currentQuestion) {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: currentQuestion.question\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Thank you for answering. Based on your responses, here are some tips and resources for you.\"\n        }]);\n      }\n    }, 1000);\n    setUserInput(\"\");\n  };\n  const handleOptionClick = option => {\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      text: option\n    }]);\n    handleSendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SMHS Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type === \"bot\" ? \"bot\" : \"user\"}`,\n        children: [message.text, message.type === \"bot\" && predefinedQuestions[messages.length - 1] && predefinedQuestions[messages.length - 1].options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: predefinedQuestions[messages.length - 1].options.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOptionClick(option),\n            className: \"option-button\",\n            children: option\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"wllZuoNMc4Nra8sa5UameR4t31Q=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","type","text","userInput","setUserInput","predefinedQuestions","question","options","handleSendMessage","trim","prev","setTimeout","currentQuestion","length","handleOptionClick","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","i","onClick","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/JFSD_PROJECT_FINAL/shms/frontend/src/components/AboutUs.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { type: \"bot\", text: \"Hi! I'm here to help you. How are you feeling today?\" },\r\n  ]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const predefinedQuestions = [\r\n    { question: \"Are you experiencing anxiety?\", options: [\"Yes\", \"No\"] },\r\n    { question: \"Do you often feel stressed?\", options: [\"Yes\", \"No\"] },\r\n    { question: \"How would you rate your mood today? (1-5)\", options: [] },\r\n  ];\r\n\r\n  const handleSendMessage = () => {\r\n    if (userInput.trim() === \"\") return;\r\n\r\n    setMessages((prev) => [...prev, { type: \"user\", text: userInput }]);\r\n\r\n    setTimeout(() => {\r\n      const currentQuestion = predefinedQuestions[messages.length - 1];\r\n      if (currentQuestion) {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { type: \"bot\", text: currentQuestion.question },\r\n        ]);\r\n      } else {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { type: \"bot\", text: \"Thank you for answering. Based on your responses, here are some tips and resources for you.\" },\r\n        ]);\r\n      }\r\n    }, 1000);\r\n\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setMessages((prev) => [...prev, { type: \"user\", text: option }]);\r\n    handleSendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        <h2>SMHS Chatbot</h2>\r\n      </div>\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.type === \"bot\" ? \"bot\" : \"user\"}`}\r\n          >\r\n            {message.text}\r\n            {message.type === \"bot\" &&\r\n              predefinedQuestions[messages.length - 1] &&\r\n              predefinedQuestions[messages.length - 1].options.length > 0 && (\r\n                <div className=\"options\">\r\n                  {predefinedQuestions[messages.length - 1].options.map(\r\n                    (option, i) => (\r\n                      <button\r\n                        key={i}\r\n                        onClick={() => handleOptionClick(option)}\r\n                        className=\"option-button\"\r\n                      >\r\n                        {option}\r\n                      </button>\r\n                    )\r\n                  )}\r\n                </div>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}